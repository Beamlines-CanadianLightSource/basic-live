# Generated by Django 3.1.3 on 2020-12-02 15:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.forms.models import model_to_dict


def transfer_connections(apps, schema_editor):
    """
    Transfer data from legacy 'staff' app
    """
    RemoteConnection = apps.get_model('connections', 'RemoteConnection')
    RemoteConnectionPoint = apps.get_model('connections', 'RemoteConnectionPoint')
    try:
        UserList = apps.get_model('staff', 'UserList')
        LegacyRemoteConnection = apps.get_model('staff', 'RemoteConnection')
    except LookupError:
        return

    db_alias = schema_editor.connection.alias
    for obj in UserList.objects.using(db_alias).order_by('id'):
        info = model_to_dict(obj)
        info.pop('id')
        beamlines = info.pop('beamline')
        users = info.pop('users')

        rcp = RemoteConnectionPoint.objects.using(db_alias).create(**info)
        for bl in beamlines:
            rcp.beamline.add(bl)
        for user in users:
            rcp.users.add(user)

    to_create = []
    for obj in LegacyRemoteConnection.objects.using(db_alias).order_by('id'):
        info = model_to_dict(obj)
        info['userlist'] = RemoteConnectionPoint.objects.get(name=obj.userlist.name)
        info['user'] = obj.user
        info.pop('id')

        to_create.append(RemoteConnection(**info))

    RemoteConnection.objects.using(db_alias).bulk_create(to_create)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lims', '0077_auto_20201201_1535'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RemoteConnectionPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.GenericIPAddressField()),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('modified', models.DateTimeField(auto_now_add=True, verbose_name='date modified')),
                ('beamline', models.ManyToManyField(blank=True, related_name='connection_points', to='lims.Beamline')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Access List',
            },
        ),
        migrations.CreateModel(
            name='RemoteConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=48)),
                ('status', models.CharField(max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='date ended')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', to=settings.AUTH_USER_MODEL)),
                ('userlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='connections.remoteconnectionpoint')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunPython(transfer_connections)
    ]
